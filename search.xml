<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>plan</title>
      <link href="/2022/07/02/plan/"/>
      <url>/2022/07/02/plan/</url>
      
        <content type="html"><![CDATA[<h1 id="Timetable"><a href="#Timetable" class="headerlink" title="Timetable"></a>Timetable</h1><p>因为朝向够好 —&gt; 理论有充足的阳光 —&gt; 应该是能早起的</p><p>来看看厦大<br><img src="/2022/07/02/plan/1.jpeg"></p><p><img src="/2022/07/02/plan/2.jpeg"></p><h1 id="时间表"><a href="#时间表" class="headerlink" title="时间表:"></a>时间表:</h1><p>(每周周一晚上 与他总结一周所学 –&gt; 及时调整路线，分析进度快慢)</p><h3 id="早上"><a href="#早上" class="headerlink" title="早上"></a>早上</h3><p>9:00 起床</p><p>9:30前 洗漱吃完早餐(不点外卖省钱) </p><h1 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h1><p>y总算法基础课(至少三个打卡标)   —&gt;    学累了可以 离散数学 和 数理统计(至少一小部分/三小节)</p><p>中午    12:40 吃完饭 </p><p>12:40 —&gt; 1：45  午睡捏</p><p>下午2:00 前调整好自己</p><p>操作系统,计算机网络，计组(408 数据结构外的)<br>(网课 3p以上 书的话 25页码)</p><p>晚上</p><p>6:00 吃完饭 可以打两把游戏<br>7:20 前调整好自己</p><p>背单词,高数<br>高数(1800 做题一面 网课对应刷)</p><p>(任务结束可以选择玩)</p><p>12:30 睡觉 </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何科学上网？</title>
      <link href="/2022/06/27/vpn/"/>
      <url>/2022/06/27/vpn/</url>
      
        <content type="html"><![CDATA[<h2 id="安装代理工具"><a href="#安装代理工具" class="headerlink" title="安装代理工具"></a>安装代理工具</h2><p>这里我是用的是<a href="https://github.com/Fndroid/clash_for_windows_pkg">clash</a>(clash for windows ) , 你也可以选择如V2rayN这样的代理工具。</p><ul><li>点击clash可以跳转到对应github</li></ul><h5 id="点击Releases-下载喜欢的版本"><a href="#点击Releases-下载喜欢的版本" class="headerlink" title="点击Releases 下载喜欢的版本"></a>点击Releases 下载喜欢的版本</h5><p><img src="/2022/06/27/vpn/1.png">    </p><h5 id="解压完成安装后将你的订阅复制"><a href="#解压完成安装后将你的订阅复制" class="headerlink" title="解压完成安装后将你的订阅复制"></a>解压完成安装后将你的订阅复制</h5><p>(至于订阅的获取自行搜索)<br><img src="/2022/06/27/vpn/2.png"></p><h2 id="使用火狐浏览器"><a href="#使用火狐浏览器" class="headerlink" title="使用火狐浏览器"></a>使用火狐浏览器</h2><ul><li>笔者出现过其他浏览器无法自动代理的问题</li></ul><p>在clash界面复制端口，并开启代理(变绿的按钮)<br><img src="/2022/06/27/vpn/3.png"></p><p>打开火狐浏览器 –&gt; 点击设置 –&gt; 搜索代理 —&gt; 如图更改(端口要和clash主页的一致)<br><img src="/2022/06/27/vpn/4.png"></p><h2 id="至此配置完毕"><a href="#至此配置完毕" class="headerlink" title="至此配置完毕!"></a>至此配置完毕!</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>compile</title>
      <link href="/2022/06/03/compile/"/>
      <url>/2022/06/03/compile/</url>
      
        <content type="html"><![CDATA[<h1 id="如何在windows下写makefile并完成编译"><a href="#如何在windows下写makefile并完成编译" class="headerlink" title="如何在windows下写makefile并完成编译"></a>如何在windows下写makefile并完成编译</h1><p>“在Linux下我们一般通过gcc和makefile完成编译，Windows下C/C++的编译一般使用的是IDE集成的编译器，或者Cmake。”</p><p><strong>但我就是要用最古老的方法 = = </strong></p><h1 id="1-安装Mingw-get"><a href="#1-安装Mingw-get" class="headerlink" title="1. 安装Mingw-get"></a>1. 安装Mingw-get</h1><ul><li><p>这里推荐使用bing作为搜索引擎,直接搜索Mingw-get<br><img src="/2022/06/03/compile/1.png"><br>打开网页，点击绿色的download下载，然后完成安装，最后添加安装地址的bin目录到系统环境变量。</p></li><li><p>然后打开cmd</p><pre class="language-zash" data-language="zash"><code class="language-zash">mingw-get install mingw32-make</code></pre></li></ul><p>然后将mingw32-make名字重命名为make<br><img src="/2022/06/03/compile/2.png"></p><p>这样在有makefile的文件夹下面打开cmd/任意的shell </p><pre class="language-git" data-language="git"><code class="language-git">make</code></pre><p><img src="/2022/06/03/compile/3.png"></p><p>就能成功编译了！(值得注意的是，如果系统内没用gcc/g++ make会报错)</p><ul><li>此时文件夹内就生成了.exe的可执行文件<br><img src="/2022/06/03/compile/4.png"></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无知</title>
      <link href="/2022/05/05/plus/"/>
      <url>/2022/05/05/plus/</url>
      
        <content type="html"><![CDATA[<h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><p><img src="/2022/05/05/plus/1.png"></p><p>这里的  -“A” 目的是让数组里面的 ‘ ‘ 转换后的值不超过26<br>eg.   ‘B’ = 66  所以 ‘B’ - ‘A’ =1 即 symbolValues[1]</p><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ul><li>初始化<pre class="language-C" data-language="C"><code class="language-C">int arr[6] &#x3D; &#123;0,0,0,0,0,212&#125;; &#x2F;&#x2F; 传统的语法int arr[6] &#x3D; &#123;[5] &#x3D; 212&#125;; &#x2F;&#x2F; 把arr[5]初始化为212</code></pre>[4] = 31,30,31，那么 后面这些值将被用于初始化指定元素后面的元素。也就是说，在days[4]被初 始化为31后，days[5]和days[6]将分别被初始化为30和31。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo_bugs</title>
      <link href="/2022/05/04/hexo-bugs/"/>
      <url>/2022/05/04/hexo-bugs/</url>
      
        <content type="html"><![CDATA[<p>最近搭建了基于hexo框架的个人博客，碰壁多次，<br>网上的解决方法很多都是错的，头铁的话容易睡不着觉<br>这里我将分享一些我遇到的头痛问题</p><h2 id="hexo-init-报错"><a href="#hexo-init-报错" class="headerlink" title="hexo init 报错"></a>hexo init 报错</h2><p><img src="/2022/05/04/hexo-bugs/1.png"></p><p>这个可以可以用</p><pre class="language-bash" data-language="bash"><code class="language-bash">hexo init blog</code></pre><p>最后的blog就是你初始化hexo，他会自己创建的文件夹的名字</p><h2 id="将博客上传github，连接超时"><a href="#将博客上传github，连接超时" class="headerlink" title="将博客上传github，连接超时"></a>将博客上传github，连接超时</h2><p><img src="/2022/05/04/hexo-bugs/2.jpg"></p><p>这个一般是hexo配置文件的问题</p><ul><li><p>首先找到hexo配置文件<br>  我的是D:\Blog\ _config.yml</p></li><li><p>网上很多更改配置文件如下：</p><pre class="language-bash" data-language="bash"><code class="language-bash">deploy:    type: <span class="token function">git</span>    repo: ********<span class="token punctuation">(</span>你GitHub仓库网址<span class="token punctuation">)</span>    branch: master</code></pre><p>但是其实随着GitHub更新，master 分支已经失效</p></li></ul><h3 id="正确的是："><a href="#正确的是：" class="headerlink" title="正确的是："></a>正确的是：</h3><pre class="language-bash" data-language="bash"><code class="language-bash">deploy:    type: <span class="token function">git</span>    repo: ********<span class="token punctuation">(</span>你GitHub仓库网址<span class="token punctuation">)</span>    branch: main</code></pre><ul><li>在搭建完毕之后也可能出现这样的问题,博主的解决方式是修改本地hosts文件<br>在（C:\Windows\System32\drivers\etc）里面的hosts添加一行<pre class="language-zash" data-language="zash"><code class="language-zash">20.205.243.166              github.com</code></pre>解决！</li></ul><h2 id="hexo-代码块异常"><a href="#hexo-代码块异常" class="headerlink" title="hexo 代码块异常"></a>hexo 代码块异常</h2><p><img src="/2022/05/04/hexo-bugs/3.png"></p><p><strong>blod 同样是修改hexo配置文件:</strong><br><img src="/2022/05/04/hexo-bugs/4.png"></p><h2 id="hexo上传图片无法显示"><a href="#hexo上传图片无法显示" class="headerlink" title="hexo上传图片无法显示"></a>hexo上传图片无法显示</h2><p><img src="/2022/05/04/hexo-bugs/5.png"></p><p>这个问题网上基本没有对的</p><ul><li>首先更改hexo配置文件<br>  ctrl + f 搜索  post_asset_folder</li></ul><pre class="language-bash" data-language="bash"><code class="language-bash">post_asset_folder: <span class="token boolean">true</span> </code></pre><p>其作用就是你在Git上     hexo new abc<br>他会创建一个 abc.md 的同时创建一个叫 abc 的文件夹(存放图片)</p><ul><li>接着用 <pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/CodeFalling/hexo-asset-image</code></pre>如果按网上装了其他插件记得 npm uninstall </li></ul><p>也可以看这个大佬的<a href="https://www.bilibili.com/video/BV1D7411U7Yk?spm_id_from=333.999.0.0">视频</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
